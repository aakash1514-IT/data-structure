#include <stdio.h>
#include <stdlib.h>

typedef struct TreeNode {
    int value;               
    struct TreeNode* left;    
    struct TreeNode* right;   
} TreeNode;

TreeNode* createNode(int value) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    if (newNode == NULL) {
        printf("Error allocating memory!\n");
        exit(1);
    }
    

    newNode->value = value;
    newNode->left = NULL;
    newNode->right = NULL;
    
    return newNode;
}


void printInOrder(TreeNode* root) {
    if (root != NULL) {
        printInOrder(root->left);
        printf("%d ", root->value);
        printInOrder(root->right);
    }
}

int main() {
  
    TreeNode* root = createNode(10);
    root->left = createNode(5);
    root->right = createNode(15);
    root->left->left = createNode(2);
    root->left->right = createNode(7);
    root->right->right = createNode(20);
    
    printf("In-order traversal of the binary tree:\n");
    printInOrder(root);
    printf("\n");

    // Free allocated memory (not shown here for simplicity)
    
    return 0;
}
